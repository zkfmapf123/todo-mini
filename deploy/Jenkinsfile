pipeline {
    agent any

    parameters {
        string(name : "DOCKER_PATH", defaultValue : "deploy", description : "docker image path")
        string(name : "DOCKER_IMAGE", defaultValue : "demo", description : "docker image")
        string(name : "DOCKER_ENV", defaultValue: "dev", description : "docker env")
        string(name : "DOCKER_VERSION", defaultValue : "1.0.0", description : "docker tag")
    }


    environment {
        REGION = "ap-northeast-2"
        ECR_REPOSITORY = ""
        ECR_DOCKER_NAME = ""
        ECR_DOCKER_TAG = ""
    }

    stages {
        stage("Build Docker Images") {
            steps {
                dir("deploy") {
                    sh 'ls'
                }
            }
        }

        stage("Docker Execute Container") {
            steps {
                echo "Docker Execute Container"
            }
        }

        stage("CI Test") {
            
            parallel {
                stage ("Unit Test") {
                    steps {
                        echo "unit test"
                    }
                }

                stage("TDD Test") {    
                    steps {
                        echo "tdd test"
                    }
                }

                stage("BDD Test") {    
                    steps {
                        echo "bdd test"
                    }
                }

                stage("E2E Test") {    
                    steps {
                        echo "e2e test"
                    }
                }
            }
        }

        // stage("Run Test Code") {
        //     steps {
        //         echo "run test code"    
        //     }
        // }

        // stage("Push Docker Image") {
        //     steps {
        //         echo "push docker image"    
        //     }
        // }

        // stage("Alarm To Push Docker Image") {
        //     steps {
        //         echo "alarm to push docker images"    
        //     }
        // }

        // stage("Deploy Workload") {
        //     steps {
        //         echo "deploy workload"    
        //     }
        // }
    }

    post {
        always {
            echo "always"
        }
    }
}